/*
 * Task_Scheduler.c
 *
 *  Created on: Apr 3, 2023
 *      Author: uif47623
*/

/*********************************************************************************************************************/
/*-----------------------------------------------------Includes------------------------------------------------------*/
/*********************************************************************************************************************/

#include "Task_Scheduler.h"

/*********************************************************************************************************************/
/*------------------------------------------------------Defines------------------------------------------------------*/
/*********************************************************************************************************************/

/*********************************************************************************************************************/
/*------------------------------------------------------Structs------------------------------------------------------*/
/*********************************************************************************************************************/

/*********************************************************************************************************************/
/*------------------------------------------------------Globals------------------------------------------------------*/
/*********************************************************************************************************************/
// Array with all tasks
extern S_TS_Task taskList[MAX_TASKS];

// Global var that stores the number of tasks
uint16 numOfTasks = 0;

/*********************************************************************************************************************/
/*---------------------------------------------Function Implementations----------------------------------------------*/
/*********************************************************************************************************************/

void TS_Create_Task(void (*function)(void), unsigned long interval) {
    if (numOfTasks >= MAX_TASKS) {
        // ERROR: too many tasks!
    }

    S_TS_Task newTask = { function, interval, interval };
    taskList[numOfTasks++] = newTask;
}



