/**
 * \file
 *
 * \brief AUTOSAR ComM
 *
 * This file contains the implementation of the AUTOSAR
 * module ComM.
 *
 * \author Elektrobit Automotive GmbH, 91058 Erlangen, Germany
 *
 * Copyright 2005 - 2017 Elektrobit Automotive GmbH
 * All rights exclusively reserved for Elektrobit Automotive GmbH,
 * unless expressly agreed to otherwise.
 */
#if (!defined COMM_TRACE_INTERNAL_H)
#define COMM_TRACE_INTERNAL_H
/*==================[inclusions]============================================*/

/*==================[macros]================================================*/
/* Place internal debug instrumentation macros in this file, i.e. all
   macros that are not generated for the public api instrumentation.
*/

#ifndef DBG_COMM_ENTER_SCHM_COMM_EXCLUSIVE_AREA_0_ENTRY
#define DBG_COMM_ENTER_SCHM_COMM_EXCLUSIVE_AREA_0_ENTRY()
#endif

#ifndef DBG_COMM_ENTER_SCHM_COMM_EXCLUSIVE_AREA_0_EXIT
#define DBG_COMM_ENTER_SCHM_COMM_EXCLUSIVE_AREA_0_EXIT()
#endif

#ifndef DBG_COMM_EXIT_SCHM_COMM_EXCLUSIVE_AREA_0_ENTRY
#define DBG_COMM_EXIT_SCHM_COMM_EXCLUSIVE_AREA_0_ENTRY()
#endif

#ifndef DBG_COMM_EXIT_SCHM_COMM_EXCLUSIVE_AREA_0_EXIT
#define DBG_COMM_EXIT_SCHM_COMM_EXCLUSIVE_AREA_0_EXIT()
#endif

#ifndef DBG_COMM_RTE_GETINHIBITIONSTATUS_ENTRY
#define DBG_COMM_RTE_GETINHIBITIONSTATUS_ENTRY(Channel,Status)
#endif

#ifndef DBG_COMM_RTE_GETINHIBITIONSTATUS_EXIT
#define DBG_COMM_RTE_GETINHIBITIONSTATUS_EXIT(RetVal,Channel,Status)
#endif

#ifndef DBG_COMM_RTE_PREVENTWAKEUP_ENTRY
#define DBG_COMM_RTE_PREVENTWAKEUP_ENTRY(a,b)
#endif

#ifndef DBG_COMM_RTE_PREVENTWAKEUP_EXIT
#define DBG_COMM_RTE_PREVENTWAKEUP_EXIT(a,b,c)
#endif

#ifndef DBG_COMM_RTE_LIMITCHANNELTONOCOMMODE_ENTRY
#define DBG_COMM_RTE_LIMITCHANNELTONOCOMMODE_ENTRY(a,b)
#endif

#ifndef DBG_COMM_RTE_LIMITCHANNELTONOCOMMODE_EXIT
#define DBG_COMM_RTE_LIMITCHANNELTONOCOMMODE_EXIT(a,b,c)
#endif

#ifndef DBG_COMM_RTE_LIMITECUTONOCOMMODE_ENTRY
#define DBG_COMM_RTE_LIMITECUTONOCOMMODE_ENTRY(a)
#endif

#ifndef DBG_COMM_RTE_LIMITECUTONOCOMMODE_EXIT
#define DBG_COMM_RTE_LIMITECUTONOCOMMODE_EXIT(a,b)
#endif

#ifndef DBG_COMM_RTE_READINHIBITCOUNTER_ENTRY
#define DBG_COMM_RTE_READINHIBITCOUNTER_ENTRY(a)
#endif

#ifndef DBG_COMM_RTE_READINHIBITCOUNTER_EXIT
#define DBG_COMM_RTE_READINHIBITCOUNTER_EXIT(a,b)
#endif

#ifndef DBG_COMM_RTE_RESETINHIBITCOUNTER_ENTRY
#define DBG_COMM_RTE_RESETINHIBITCOUNTER_ENTRY()
#endif

#ifndef DBG_COMM_RTE_RESETINHIBITCOUNTER_EXIT
#define DBG_COMM_RTE_RESETINHIBITCOUNTER_EXIT(a)
#endif

#ifndef DBG_COMM_RTE_SETECUGROUPCLASSIFICATION_ENTRY
#define DBG_COMM_RTE_SETECUGROUPCLASSIFICATION_ENTRY(a)
#endif

#ifndef DBG_COMM_RTE_SETECUGROUPCLASSIFICATION_EXIT
#define DBG_COMM_RTE_SETECUGROUPCLASSIFICATION_EXIT(a,b)
#endif

#ifndef DBG_COMM_RTE_REQUESTCOMMODE_ENTRY
#define DBG_COMM_RTE_REQUESTCOMMODE_ENTRY(a,b)
#endif

#ifndef DBG_COMM_RTE_REQUESTCOMMODE_EXIT
#define DBG_COMM_RTE_REQUESTCOMMODE_EXIT(a,b,c)
#endif

#ifndef DBG_COMM_RTE_GETMAXCOMMODE_ENTRY
#define DBG_COMM_RTE_GETMAXCOMMODE_ENTRY(a,b)
#endif

#ifndef DBG_COMM_RTE_GETMAXCOMMODE_EXIT
#define DBG_COMM_RTE_GETMAXCOMMODE_EXIT(a,b,c)
#endif

#ifndef DBG_COMM_RTE_GETREQUESTEDCOMMODE_ENTRY
#define DBG_COMM_RTE_GETREQUESTEDCOMMODE_ENTRY(a,b)
#endif

#ifndef DBG_COMM_RTE_GETREQUESTEDCOMMODE_EXIT
#define DBG_COMM_RTE_GETREQUESTEDCOMMODE_EXIT(a,b,c)
#endif

#ifndef DBG_COMM_RTE_GETCURRENTCOMMODE_ENTRY
#define DBG_COMM_RTE_GETCURRENTCOMMODE_ENTRY(a,b)
#endif

#ifndef DBG_COMM_RTE_GETCURRENTCOMMODE_EXIT
#define DBG_COMM_RTE_GETCURRENTCOMMODE_EXIT(a,b,c)
#endif

#ifndef DBG_COMM_RTE_GETREQUESTEDMODE_ENTRY
#define DBG_COMM_RTE_GETREQUESTEDMODE_ENTRY(a,b)
#endif

#ifndef DBG_COMM_RTE_GETREQUESTEDMODE_EXIT
#define DBG_COMM_RTE_GETREQUESTEDMODE_EXIT(a,b,c)
#endif

#ifndef DBG_COMM_ASR32_RTE_GETINHIBITIONSTATUS_ENTRY
#define DBG_COMM_ASR32_RTE_GETINHIBITIONSTATUS_ENTRY(Channel,Status)
#endif

#ifndef DBG_COMM_ASR32_RTE_GETINHIBITIONSTATUS_EXIT
#define DBG_COMM_ASR32_RTE_GETINHIBITIONSTATUS_EXIT(RetVal,Channel,Status)
#endif

#ifndef DBG_COMM_ASR32_RTE_PREVENTWAKEUP_ENTRY
#define DBG_COMM_ASR32_RTE_PREVENTWAKEUP_ENTRY(a,b)
#endif

#ifndef DBG_COMM_ASR32_RTE_PREVENTWAKEUP_EXIT
#define DBG_COMM_ASR32_RTE_PREVENTWAKEUP_EXIT(a,b,c)
#endif

#ifndef DBG_COMM_ASR32_RTE_LIMITCHANNELTONOCOMMODE_ENTRY
#define DBG_COMM_ASR32_RTE_LIMITCHANNELTONOCOMMODE_ENTRY(a,b)
#endif

#ifndef DBG_COMM_ASR32_RTE_LIMITCHANNELTONOCOMMODE_EXIT
#define DBG_COMM_ASR32_RTE_LIMITCHANNELTONOCOMMODE_EXIT(a,b,c)
#endif

#ifndef DBG_COMM_ASR32_RTE_LIMITECUTONOCOMMODE_ENTRY
#define DBG_COMM_ASR32_RTE_LIMITECUTONOCOMMODE_ENTRY(a)
#endif

#ifndef DBG_COMM_ASR32_RTE_LIMITECUTONOCOMMODE_EXIT
#define DBG_COMM_ASR32_RTE_LIMITECUTONOCOMMODE_EXIT(a,b)
#endif

#ifndef DBG_COMM_ASR32_RTE_READINHIBITCOUNTER_ENTRY
#define DBG_COMM_ASR32_RTE_READINHIBITCOUNTER_ENTRY(a)
#endif

#ifndef DBG_COMM_ASR32_RTE_READINHIBITCOUNTER_EXIT
#define DBG_COMM_ASR32_RTE_READINHIBITCOUNTER_EXIT(a,b)
#endif

#ifndef DBG_COMM_ASR32_RTE_RESETINHIBITCOUNTER_ENTRY
#define DBG_COMM_ASR32_RTE_RESETINHIBITCOUNTER_ENTRY()
#endif

#ifndef DBG_COMM_ASR32_RTE_RESETINHIBITCOUNTER_EXIT
#define DBG_COMM_ASR32_RTE_RESETINHIBITCOUNTER_EXIT(a)
#endif

#ifndef DBG_COMM_ASR32_RTE_SETECUGROUPCLASSIFICATION_ENTRY
#define DBG_COMM_ASR32_RTE_SETECUGROUPCLASSIFICATION_ENTRY(a)
#endif

#ifndef DBG_COMM_ASR32_RTE_SETECUGROUPCLASSIFICATION_EXIT
#define DBG_COMM_ASR32_RTE_SETECUGROUPCLASSIFICATION_EXIT(a,b)
#endif

#ifndef DBG_COMM_ASR32_RTE_REQUESTCOMMODE_ENTRY
#define DBG_COMM_ASR32_RTE_REQUESTCOMMODE_ENTRY(a,b)
#endif

#ifndef DBG_COMM_ASR32_RTE_REQUESTCOMMODE_EXIT
#define DBG_COMM_ASR32_RTE_REQUESTCOMMODE_EXIT(a,b,c)
#endif

#ifndef DBG_COMM_ASR32_RTE_GETMAXCOMMODE_ENTRY
#define DBG_COMM_ASR32_RTE_GETMAXCOMMODE_ENTRY(a,b)
#endif

#ifndef DBG_COMM_ASR32_RTE_GETMAXCOMMODE_EXIT
#define DBG_COMM_ASR32_RTE_GETMAXCOMMODE_EXIT(a,b,c)
#endif

#ifndef DBG_COMM_ASR32_RTE_GETREQUESTEDCOMMODE_ENTRY
#define DBG_COMM_ASR32_RTE_GETREQUESTEDCOMMODE_ENTRY(a,b)
#endif

#ifndef DBG_COMM_ASR32_RTE_GETREQUESTEDCOMMODE_EXIT
#define DBG_COMM_ASR32_RTE_GETREQUESTEDCOMMODE_EXIT(a,b,c)
#endif

#ifndef DBG_COMM_ASR32_RTE_GETCURRENTCOMMODE_ENTRY
#define DBG_COMM_ASR32_RTE_GETCURRENTCOMMODE_ENTRY(a,b)
#endif

#ifndef DBG_COMM_ASR32_RTE_GETCURRENTCOMMODE_EXIT
#define DBG_COMM_ASR32_RTE_GETCURRENTCOMMODE_EXIT(a,b,c)
#endif

#ifndef DBG_COMM_ASR32_RTE_GETREQUESTEDMODE_ENTRY
#define DBG_COMM_ASR32_RTE_GETREQUESTEDMODE_ENTRY(a,b)
#endif

#ifndef DBG_COMM_ASR32_RTE_GETREQUESTEDMODE_EXIT
#define DBG_COMM_ASR32_RTE_GETREQUESTEDMODE_EXIT(a,b,c)
#endif 

#ifndef DBG_COMM_ASR40_RTE_GETINHIBITIONSTATUS_ENTRY
#define DBG_COMM_ASR40_RTE_GETINHIBITIONSTATUS_ENTRY(Channel,Status)
#endif

#ifndef DBG_COMM_ASR40_RTE_GETINHIBITIONSTATUS_EXIT
#define DBG_COMM_ASR40_RTE_GETINHIBITIONSTATUS_EXIT(RetVal,Channel,Status)
#endif

#ifndef DBG_COMM_ASR40_RTE_PREVENTWAKEUP_ENTRY
#define DBG_COMM_ASR40_RTE_PREVENTWAKEUP_ENTRY(a,b)
#endif

#ifndef DBG_COMM_ASR40_RTE_PREVENTWAKEUP_EXIT
#define DBG_COMM_ASR40_RTE_PREVENTWAKEUP_EXIT(a,b,c)
#endif

#ifndef DBG_COMM_ASR40_RTE_LIMITCHANNELTONOCOMMODE_ENTRY
#define DBG_COMM_ASR40_RTE_LIMITCHANNELTONOCOMMODE_ENTRY(a,b)
#endif

#ifndef DBG_COMM_ASR40_RTE_LIMITCHANNELTONOCOMMODE_EXIT
#define DBG_COMM_ASR40_RTE_LIMITCHANNELTONOCOMMODE_EXIT(a,b,c)
#endif

#ifndef DBG_COMM_ASR40_RTE_LIMITECUTONOCOMMODE_ENTRY
#define DBG_COMM_ASR40_RTE_LIMITECUTONOCOMMODE_ENTRY(a)
#endif

#ifndef DBG_COMM_ASR40_RTE_LIMITECUTONOCOMMODE_EXIT
#define DBG_COMM_ASR40_RTE_LIMITECUTONOCOMMODE_EXIT(a,b)
#endif

#ifndef DBG_COMM_ASR40_RTE_READINHIBITCOUNTER_ENTRY
#define DBG_COMM_ASR40_RTE_READINHIBITCOUNTER_ENTRY(a)
#endif

#ifndef DBG_COMM_ASR40_RTE_READINHIBITCOUNTER_EXIT
#define DBG_COMM_ASR40_RTE_READINHIBITCOUNTER_EXIT(a,b)
#endif

#ifndef DBG_COMM_ASR40_RTE_RESETINHIBITCOUNTER_ENTRY
#define DBG_COMM_ASR40_RTE_RESETINHIBITCOUNTER_ENTRY()
#endif

#ifndef DBG_COMM_ASR40_RTE_RESETINHIBITCOUNTER_EXIT
#define DBG_COMM_ASR40_RTE_RESETINHIBITCOUNTER_EXIT(a)
#endif

#ifndef DBG_COMM_ASR40_RTE_SETECUGROUPCLASSIFICATION_ENTRY
#define DBG_COMM_ASR40_RTE_SETECUGROUPCLASSIFICATION_ENTRY(a)
#endif

#ifndef DBG_COMM_ASR40_RTE_SETECUGROUPCLASSIFICATION_EXIT
#define DBG_COMM_ASR40_RTE_SETECUGROUPCLASSIFICATION_EXIT(a,b)
#endif

#ifndef DBG_COMM_ASR40_RTE_REQUESTCOMMODE_ENTRY
#define DBG_COMM_ASR40_RTE_REQUESTCOMMODE_ENTRY(a,b)
#endif

#ifndef DBG_COMM_ASR40_RTE_REQUESTCOMMODE_EXIT
#define DBG_COMM_ASR40_RTE_REQUESTCOMMODE_EXIT(a,b,c)
#endif

#ifndef DBG_COMM_ASR40_RTE_GETMAXCOMMODE_ENTRY
#define DBG_COMM_ASR40_RTE_GETMAXCOMMODE_ENTRY(a,b)
#endif

#ifndef DBG_COMM_ASR40_RTE_GETMAXCOMMODE_EXIT
#define DBG_COMM_ASR40_RTE_GETMAXCOMMODE_EXIT(a,b,c)
#endif

#ifndef DBG_COMM_ASR40_RTE_GETREQUESTEDCOMMODE_ENTRY
#define DBG_COMM_ASR40_RTE_GETREQUESTEDCOMMODE_ENTRY(a,b)
#endif

#ifndef DBG_COMM_ASR40_RTE_GETREQUESTEDCOMMODE_EXIT
#define DBG_COMM_ASR40_RTE_GETREQUESTEDCOMMODE_EXIT(a,b,c)
#endif

#ifndef DBG_COMM_ASR40_RTE_GETCURRENTCOMMODE_ENTRY
#define DBG_COMM_ASR40_RTE_GETCURRENTCOMMODE_ENTRY(a,b)
#endif

#ifndef DBG_COMM_ASR40_RTE_GETCURRENTCOMMODE_EXIT
#define DBG_COMM_ASR40_RTE_GETCURRENTCOMMODE_EXIT(a,b,c)
#endif
/*==================[type definitions]======================================*/

/*==================[external function declarations]========================*/

/*==================[internal function declarations]========================*/

/*==================[external constants]====================================*/

/*==================[internal constants]====================================*/

/*==================[external data]=========================================*/

/*==================[internal data]=========================================*/

/*==================[external function definitions]=========================*/

/*==================[internal function definitions]=========================*/

#endif /* (!defined COMM_TRACE_INTERNAL_H) */
/*==================[end of file]===========================================*/
